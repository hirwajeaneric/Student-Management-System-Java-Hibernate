/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sms.view;

import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Timestamp;
import java.util.Iterator;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author hirwa
 */
public class UploadStudents extends javax.swing.JInternalFrame {
    
    /**
     * Creates new form UploadStudents
     */
    public UploadStudents() {
        initComponents();
        uploadToTable();
    }
    
    public void uploadToTable(){
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        uploadStudentButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        student2Table = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Upload Student Data");

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        uploadStudentButton.setBackground(new java.awt.Color(0, 153, 255));
        uploadStudentButton.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        uploadStudentButton.setForeground(new java.awt.Color(255, 255, 255));
        uploadStudentButton.setText("Upload Student");
        uploadStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadStudentButtonActionPerformed(evt);
            }
        });

        student2Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id number", "Name", "Date of Birth", "Department", "Courses"
            }
        ));
        jScrollPane1.setViewportView(student2Table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(uploadStudentButton)
                .addGap(221, 221, 221))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(uploadStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uploadStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadStudentButtonActionPerformed
        // TODO add your handling code here:
        
        int batchSize = 1000;
        Connection connection = null;      
        //String path;
        JFileChooser chooser =new JFileChooser();
        chooser.setDialogTitle("Import Excel File");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel files", "xlsx", "xls");
        chooser.addChoosableFileFilter(filter);            
        chooser.setFileFilter(filter);                  
        int result= chooser.showOpenDialog(null);
            if (result==JFileChooser.APPROVE_OPTION){
            try {
             //File file = chooser.getSelectedFile();
            long start = System.currentTimeMillis();
            String  path=chooser.getSelectedFile().getAbsolutePath();
            
            FileInputStream inputStream = new FileInputStream( path);
 
            Workbook workbook = new XSSFWorkbook(inputStream);
 
            org.apache.poi.ss.usermodel.Sheet firstSheet = workbook.getSheetAt(0);
            Iterator<Row> rowIterator = firstSheet.iterator();
 
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/sms?", "root", "");
            connection.setAutoCommit(false);
  
            String sql = "INSERT INTO student2 (id, name, dob, department,course) VALUES (?,?,?,?,?)";
            PreparedStatement statement = connection.prepareStatement(sql);    
             
            int count = 0;
             
            rowIterator.next(); // skip the header row
             
            while (rowIterator.hasNext()) {
                Row nextRow = rowIterator.next();
                Iterator<org.apache.poi.ss.usermodel.Cell> cellIterator = nextRow.cellIterator();
 
                while (cellIterator.hasNext()) {
                    org.apache.poi.ss.usermodel.Cell nextCell = cellIterator.next();
 
                    int columnIndex = nextCell.getColumnIndex();
 
                    switch (columnIndex) {
                        
                   case 0:
                        int id = (int) nextCell.getNumericCellValue();
                        statement.setInt(1, id);
                    case 1:
                       String name =new DataFormatter().formatCellValue(nextCell);
                        statement.setString(2, name);
                        break;
                    case 2:
                        java.util.Date enrollDate = nextCell.getDateCellValue();
                        statement.setTimestamp(3, new Timestamp(enrollDate.getTime()));
                    case 3:
                         String department = new DataFormatter().formatCellValue(nextCell);;
                        statement.setString(4, department);
                    case 4:
                         String course = new DataFormatter().formatCellValue(nextCell);
                        statement.setString(5, course);
                    }
                }
                statement.addBatch();
 
                if (count % batchSize == 0) {
                    statement.executeBatch();
                }              
            }
 
            workbook.close();
             
            // execute the remaining queries
            statement.executeBatch();
  
            connection.commit();
            connection.close();
             
            long end = System.currentTimeMillis();
            System.out.printf("Import done in %d ms\n", (end - start));
            JOptionPane.showMessageDialog(null, "Successfully Uploaded data!");
                
            //This method uploads data from database to table.    
            uploadToTable();
                
        } catch (IOException ex1) {
            System.out.println("Error reading file");
        }       catch (SQLException ex) {   
                    Logger.getLogger(UploadStudents.class.getName()).log(Level.SEVERE, null, ex);
                }   
        } 
    }//GEN-LAST:event_uploadStudentButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable student2Table;
    private javax.swing.JButton uploadStudentButton;
    // End of variables declaration//GEN-END:variables
}
